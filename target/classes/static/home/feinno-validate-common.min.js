var emailPattern = /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
var phonePattern = /^(((1[3|4|5|6|7|8|9][0-9]{1})|(15[0-9]{1}))+\d{8})$/;
var illegalPattern = /^(?:[\u4e00-\u9fa5]*\w*\s*)+$/;
var numberPattern = /^[0-9]+$/;
jQuery.validator.addMethod("illegalCheck", function(value, element) {
	return illegalPattern.test(value)
});
jQuery.validator.addMethod("numberCheck", function(value, element) {
	return !numberPattern.test(value)
});
jQuery.validator.addMethod("phoneCheck", function(value, element) {
	if (this.optional(element)) {
		displayDefaultMessage($("#" + element.id), "请输入手机号")
	}
	return this.optional(element) || phonePattern.test(value)
}, "请输入正确的手机号");
jQuery.validator.addMethod("pwdCheck", isWeakPassword, "8～20位,数字、字母、特殊符号中任意两种");
jQuery.validator.addMethod("isIdCardNo", function(value, element) {
	return this.optional(element) || isIdCardNo(value)
}, "请您输入正确的身份证号码");
jQuery.validator.addMethod("oneLevelRegionCheck", function(value, element) {
	return value != ""
}, "请选择所在地");
jQuery.validator.addMethod("twoLevelRegionCheck", function(value, element) {
	return $("#twoLevelRegion").val() != ""
}, "请选择所在地");
jQuery.validator.addMethod("threeLevelRegionCheck", function(value, element) {
	return $("#threeLevelRegion").val() != ""
}, "请选择所在地");
jQuery.validator.addMethod("oneLevelMainCatalogCheck",
		function(value, element) {
			return value != ""
		}, "请选择目录");
jQuery.validator.addMethod("twoLevelMainCatalogCheck",
		function(value, element) {
			return $("#twoLevelMainCatalog").val() != ""
		}, "请选择目录");
jQuery.validator.addMethod("threeLevelMainCatalogCheck", function(value,
		element) {
	return $("#threeLevelMainCatalog").val() != ""
}, "请选择目录");
jQuery.validator.addMethod("oneLevelCatalogCheck", function(value, element) {
	return value != ""
}, "请选择分类");
jQuery.validator.addMethod("twoLevelCatalogCheck", function(value, element) {
	return $("#twoLevelCatalog").val() != ""
}, "请选择分类");
function displayErrorMessage(element, error) {
	element.parent().parent("li").removeClass("yes");
	element.parent().parent("li").addClass("err");
	element.parent("div").next("div").find("span").remove();
	$("<span class='txt'>" + error + "</span>").appendTo(
			element.parent("div").next("div"))
}
function displayDefaultMessage(element, msg) {
	element.parent().parent("li").removeClass("yes");
	element.parent().parent("li").removeClass("err");
	element.parent("div").next("div").find("span").remove();
	$("<span class='txt'>" + msg + "</span>").appendTo(
			element.parent("div").next("div"))
}
function isWeakPassword(password) {
	var numPattern = new RegExp("^[0-9]+$");
	var charPattern = new RegExp("^[A-Za-z]+$");
	var symbolPattern = new RegExp("^[^A-Za-z0-9]+$");
	if ($.trim(password).length < 8 || $.trim(password).length > 20
			|| numPattern.test(password) || charPattern.test(password)
			|| symbolPattern.test(password)) {
		return false
	}
	return true
}
function isIdCardNo(num) {
	var factorArr = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4,
			2, 1);
	var parityBit = new Array("1", "0", "X", "9", "8", "7", "6", "5", "4", "3",
			"2");
	var varArray = new Array();
	var intValue;
	var lngProduct = 0;
	var intCheckDigit;
	var intStrLen = num.length;
	var idNumber = num;
	if ((intStrLen != 15) && (intStrLen != 18)) {
		return false
	}
	for (i = 0; i < intStrLen; i++) {
		varArray[i] = idNumber.charAt(i);
		if ((varArray[i] < "0" || varArray[i] > "9") && (i != 17)) {
			return false
		} else {
			if (i < 17) {
				varArray[i] = varArray[i] * factorArr[i]
			}
		}
	}
	if (intStrLen == 18) {
		var date8 = idNumber.substring(6, 14);
		if (isDate8(date8) == false) {
			return false
		}
		for (i = 0; i < 17; i++) {
			lngProduct = lngProduct + varArray[i]
		}
		intCheckDigit = parityBit[lngProduct % 11];
		if (varArray[17] != intCheckDigit) {
			return false
		}
	} else {
		var date6 = idNumber.substring(6, 12);
		if (isDate6(date6) == false) {
			return false
		}
	}
	return true
}
function isDate6(sDate) {
	if (!/^[0-9]{6}$/.test(sDate)) {
		return false
	}
	var year, month, day;
	year = sDate.substring(0, 4);
	month = sDate.substring(4, 6);
	if (year < 1700 || year > 2500) {
		return false
	}
	if (month < 1 || month > 12) {
		return false
	}
	return true
}
function isDate8(sDate) {
	if (!/^[0-9]{8}$/.test(sDate)) {
		return false
	}
	var year, month, day;
	year = sDate.substring(0, 4);
	month = sDate.substring(4, 6);
	day = sDate.substring(6, 8);
	var iaMonthDays = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
	if (year < 1700 || year > 2500) {
		return false
	}
	if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {
		iaMonthDays[1] = 29
	}
	if (month < 1 || month > 12) {
		return false
	}
	if (day < 1 || day > iaMonthDays[month - 1]) {
		return false
	}
	return true
};